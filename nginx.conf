worker_processes 1;

error_log  /var/log/nginx/error.log warn;
pid        /tmp/nginx.pid;

events {
  worker_connections  1024;
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  log_format  main  '$remote_addr - $upstream_cache_status [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

  access_log  /var/log/nginx/access.log  main;

  sendfile        on;
  #tcp_nopush     on;

  # security
  server_tokens off;

  keepalive_timeout 65;

  # upstream config
  upstream metadata {
    server 169.254.169.254 max_conns=1;
  }

  # proxy default settings
  proxy_cache_path /cache   levels=1            keys_zone=default:2m
                            inactive=1d         max_size=128m
                            use_temp_path=off;

  # allow stale cache on certain errors ("Always online")
  proxy_connect_timeout 10s;
  proxy_cache_use_stale
    error
    timeout
    invalid_header
    updating
    http_500
    http_502
    http_504;

  # default cache validity
  proxy_cache_valid any 30m;

  # de-dupe requests
  proxy_cache_lock on;

  # enable PUT caching (dirty, I know!)
  proxy_cache_methods GET HEAD PUT;
  proxy_cache_key $request_method$uri$is_args$args;

  server {
    listen 8080;
    server_name _;

    add_header X-Proxy-Cache $upstream_cache_status always;

#    proxy_cache_bypass $http_x_aws_ec2_metadata_token;
#    proxy_no_cache $http_x_aws_ec2_metadata_token;

#    location ~* credentials {
#      proxy_pass http://metadata;
#    }

#    location ~* ^/[^/]+/api/token$ {
#      proxy_pass http://metadata;
#    }

    location / {
      proxy_cache default;
      proxy_pass http://metadata;
    }
  }
}
